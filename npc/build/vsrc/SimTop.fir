;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit SimTop : 
  module IFetch : 
    input clock : Clock
    input reset : Reset
    output io : {imem : {en : UInt<1>, addr : UInt<64>, flip data : UInt<32>}, pc : UInt<64>, inst : UInt<32>, flip jump_en : UInt<1>, flip jump_pc : UInt<32>}
    
    reg pc : UInt<32>, clock with : (reset => (reset, UInt<32>("h080000000"))) @[IFetch.scala 13:19]
    node _pc_T = add(pc, UInt<3>("h04")) @[IFetch.scala 14:40]
    node _pc_T_1 = tail(_pc_T, 1) @[IFetch.scala 14:40]
    node _pc_T_2 = mux(io.jump_en, io.jump_pc, _pc_T_1) @[IFetch.scala 14:12]
    pc <= _pc_T_2 @[IFetch.scala 14:6]
    io.imem.en <= UInt<1>("h01") @[IFetch.scala 17:17]
    io.imem.addr <= pc @[IFetch.scala 18:17]
    io.pc <= pc @[IFetch.scala 19:17]
    io.inst <= io.imem.data @[IFetch.scala 20:17]
    
  module Decode : 
    input clock : Clock
    input reset : Reset
    output io : {flip pc : UInt<64>, flip inst : UInt<32>, decode_info : {fu_code : UInt, alu_code : UInt, bu_code : UInt, lu_code : UInt, su_code : UInt}, rs1_en : UInt<1>, rs2_en : UInt<1>, rd_en : UInt<1>, rs1_addr : UInt<5>, rs2_addr : UInt<5>, rd_addr : UInt<5>, flip rs1_data : UInt<64>, flip rs2_data : UInt<64>, op1 : UInt<64>, op2 : UInt<64>, imm : UInt<64>}
    
    node _sll_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 36:20]
    node sll = eq(UInt<13>("h01033"), _sll_T) @[Decode.scala 36:20]
    node _srl_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 37:20]
    node srl = eq(UInt<15>("h05033"), _srl_T) @[Decode.scala 37:20]
    node _sra_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 38:20]
    node sra = eq(UInt<31>("h040005033"), _sra_T) @[Decode.scala 38:20]
    node _slli_T = and(io.inst, UInt<32>("h0fc00707f")) @[Decode.scala 39:21]
    node slli = eq(UInt<13>("h01013"), _slli_T) @[Decode.scala 39:21]
    node _srli_T = and(io.inst, UInt<32>("h0fc00707f")) @[Decode.scala 40:21]
    node srli = eq(UInt<15>("h05013"), _srli_T) @[Decode.scala 40:21]
    node _srai_T = and(io.inst, UInt<32>("h0fc00707f")) @[Decode.scala 41:21]
    node srai = eq(UInt<31>("h040005013"), _srai_T) @[Decode.scala 41:21]
    node _sllw_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 42:21]
    node sllw = eq(UInt<13>("h0103b"), _sllw_T) @[Decode.scala 42:21]
    node _srlw_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 43:21]
    node srlw = eq(UInt<15>("h0503b"), _srlw_T) @[Decode.scala 43:21]
    node _sraw_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 44:21]
    node sraw = eq(UInt<31>("h04000503b"), _sraw_T) @[Decode.scala 44:21]
    node _slliw_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 45:22]
    node slliw = eq(UInt<13>("h0101b"), _slliw_T) @[Decode.scala 45:22]
    node _srliw_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 46:22]
    node srliw = eq(UInt<15>("h0501b"), _srliw_T) @[Decode.scala 46:22]
    node _sraiw_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 47:22]
    node sraiw = eq(UInt<31>("h04000501b"), _sraiw_T) @[Decode.scala 47:22]
    node _add_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 49:24]
    node add = eq(UInt<6>("h033"), _add_T) @[Decode.scala 49:24]
    node _addw_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 50:24]
    node addw = eq(UInt<6>("h03b"), _addw_T) @[Decode.scala 50:24]
    node _addi_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 51:24]
    node addi = eq(UInt<5>("h013"), _addi_T) @[Decode.scala 51:24]
    node _addiw_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 52:24]
    node addiw = eq(UInt<5>("h01b"), _addiw_T) @[Decode.scala 52:24]
    node _sub_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 53:24]
    node alu_sub = eq(UInt<31>("h040000033"), _sub_T) @[Decode.scala 53:24]
    node _subw_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 54:24]
    node alu_subw = eq(UInt<31>("h04000003b"), _subw_T) @[Decode.scala 54:24]
    node _lui_T = and(io.inst, UInt<7>("h07f")) @[Decode.scala 55:24]
    node lui = eq(UInt<6>("h037"), _lui_T) @[Decode.scala 55:24]
    node _auipc_T = and(io.inst, UInt<7>("h07f")) @[Decode.scala 56:24]
    node alu_auipc = eq(UInt<5>("h017"), _auipc_T) @[Decode.scala 56:24]
    node _xor_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 58:24]
    node xor = eq(UInt<15>("h04033"), _xor_T) @[Decode.scala 58:24]
    node _or_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 59:24]
    node or = eq(UInt<15>("h06033"), _or_T) @[Decode.scala 59:24]
    node _and_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 60:24]
    node and = eq(UInt<15>("h07033"), _and_T) @[Decode.scala 60:24]
    node _xori_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 61:24]
    node xori = eq(UInt<15>("h04013"), _xori_T) @[Decode.scala 61:24]
    node _ori_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 62:24]
    node ori = eq(UInt<15>("h06013"), _ori_T) @[Decode.scala 62:24]
    node _andi_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 63:24]
    node andi = eq(UInt<15>("h07013"), _andi_T) @[Decode.scala 63:24]
    node _slt_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 65:24]
    node slt = eq(UInt<14>("h02033"), _slt_T) @[Decode.scala 65:24]
    node _sltu_T = and(io.inst, UInt<32>("h0fe00707f")) @[Decode.scala 66:24]
    node sltu = eq(UInt<14>("h03033"), _sltu_T) @[Decode.scala 66:24]
    node _slti_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 67:24]
    node slti = eq(UInt<14>("h02013"), _slti_T) @[Decode.scala 67:24]
    node _sltiu_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 68:24]
    node sltiu = eq(UInt<14>("h03013"), _sltiu_T) @[Decode.scala 68:24]
    node _beq_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 70:24]
    node beq = eq(UInt<7>("h063"), _beq_T) @[Decode.scala 70:24]
    node _bne_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 71:24]
    node bne = eq(UInt<13>("h01063"), _bne_T) @[Decode.scala 71:24]
    node _blt_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 72:24]
    node blt = eq(UInt<15>("h04063"), _blt_T) @[Decode.scala 72:24]
    node _bge_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 73:24]
    node bge = eq(UInt<15>("h05063"), _bge_T) @[Decode.scala 73:24]
    node _bltu_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 74:24]
    node bltu = eq(UInt<15>("h06063"), _bltu_T) @[Decode.scala 74:24]
    node _bgeu_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 75:24]
    node bgeu = eq(UInt<15>("h07063"), _bgeu_T) @[Decode.scala 75:24]
    node _jal_T = and(io.inst, UInt<7>("h07f")) @[Decode.scala 77:24]
    node jal = eq(UInt<7>("h06f"), _jal_T) @[Decode.scala 77:24]
    node _jalr_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 78:24]
    node jalr = eq(UInt<7>("h067"), _jalr_T) @[Decode.scala 78:24]
    node _lb_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 80:24]
    node lb = eq(UInt<2>("h03"), _lb_T) @[Decode.scala 80:24]
    node _lh_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 81:24]
    node lh = eq(UInt<13>("h01003"), _lh_T) @[Decode.scala 81:24]
    node _lw_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 82:24]
    node lw = eq(UInt<14>("h02003"), _lw_T) @[Decode.scala 82:24]
    node _ld_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 83:24]
    node ld = eq(UInt<14>("h03003"), _ld_T) @[Decode.scala 83:24]
    node _lbu_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 84:24]
    node lbu = eq(UInt<15>("h04003"), _lbu_T) @[Decode.scala 84:24]
    node _lhu_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 85:24]
    node lhu = eq(UInt<15>("h05003"), _lhu_T) @[Decode.scala 85:24]
    node _lwu_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 86:24]
    node lwu = eq(UInt<15>("h06003"), _lwu_T) @[Decode.scala 86:24]
    node _sb_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 88:24]
    node sb = eq(UInt<6>("h023"), _sb_T) @[Decode.scala 88:24]
    node _sh_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 89:24]
    node sh = eq(UInt<13>("h01023"), _sh_T) @[Decode.scala 89:24]
    node _sw_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 90:24]
    node sw = eq(UInt<14>("h02023"), _sw_T) @[Decode.scala 90:24]
    node _sd_T = and(io.inst, UInt<15>("h0707f")) @[Decode.scala 91:24]
    node sd = eq(UInt<14>("h03023"), _sd_T) @[Decode.scala 91:24]
    node _alu_add_T = or(add, addi) @[Decode.scala 95:25]
    node alu_add = or(_alu_add_T, lui) @[Decode.scala 95:33]
    node alu_addw = or(addw, addiw) @[Decode.scala 96:26]
    node alu_sll = or(sll, slli) @[Decode.scala 101:26]
    node alu_srl = or(srl, srli) @[Decode.scala 102:26]
    node alu_sra = or(sra, srai) @[Decode.scala 103:26]
    node alu_sllw = or(sllw, slliw) @[Decode.scala 104:26]
    node alu_srlw = or(srlw, srliw) @[Decode.scala 105:26]
    node alu_sraw = or(sraw, sraiw) @[Decode.scala 106:26]
    node alu_xor = or(xor, xori) @[Decode.scala 108:26]
    node alu_or = or(or, ori) @[Decode.scala 109:26]
    node alu_and = or(and, andi) @[Decode.scala 110:26]
    node alu_slt = or(slt, slti) @[Decode.scala 112:26]
    node alu_sltu = or(sltu, sltiu) @[Decode.scala 113:26]
    node alu_code_lo_lo_lo = cat(alu_addw, alu_add) @[Cat.scala 30:58]
    node alu_code_lo_lo_hi = cat(alu_subw, alu_sub) @[Cat.scala 30:58]
    node alu_code_lo_lo = cat(alu_code_lo_lo_hi, alu_code_lo_lo_lo) @[Cat.scala 30:58]
    node alu_code_lo_hi_lo = cat(alu_sll, alu_auipc) @[Cat.scala 30:58]
    node alu_code_lo_hi_hi = cat(alu_sra, alu_srl) @[Cat.scala 30:58]
    node alu_code_lo_hi = cat(alu_code_lo_hi_hi, alu_code_lo_hi_lo) @[Cat.scala 30:58]
    node alu_code_lo = cat(alu_code_lo_hi, alu_code_lo_lo) @[Cat.scala 30:58]
    node alu_code_hi_lo_lo = cat(alu_srlw, alu_sllw) @[Cat.scala 30:58]
    node alu_code_hi_lo_hi = cat(alu_xor, alu_sraw) @[Cat.scala 30:58]
    node alu_code_hi_lo = cat(alu_code_hi_lo_hi, alu_code_hi_lo_lo) @[Cat.scala 30:58]
    node alu_code_hi_hi_lo = cat(alu_and, alu_or) @[Cat.scala 30:58]
    node alu_code_hi_hi_hi = cat(alu_sltu, alu_slt) @[Cat.scala 30:58]
    node alu_code_hi_hi = cat(alu_code_hi_hi_hi, alu_code_hi_hi_lo) @[Cat.scala 30:58]
    node alu_code_hi = cat(alu_code_hi_hi, alu_code_hi_lo) @[Cat.scala 30:58]
    node alu_code = cat(alu_code_hi, alu_code_lo) @[Cat.scala 30:58]
    node alu_en = neq(alu_code, UInt<1>("h00")) @[Decode.scala 116:29]
    node bu_code_lo_lo = cat(bne, beq) @[Cat.scala 30:58]
    node bu_code_lo_hi = cat(bge, blt) @[Cat.scala 30:58]
    node bu_code_lo = cat(bu_code_lo_hi, bu_code_lo_lo) @[Cat.scala 30:58]
    node bu_code_hi_lo = cat(bgeu, bltu) @[Cat.scala 30:58]
    node bu_code_hi_hi = cat(jalr, jal) @[Cat.scala 30:58]
    node bu_code_hi = cat(bu_code_hi_hi, bu_code_hi_lo) @[Cat.scala 30:58]
    node bu_code = cat(bu_code_hi, bu_code_lo) @[Cat.scala 30:58]
    node bu_en = neq(bu_code, UInt<1>("h00")) @[Decode.scala 119:27]
    node lu_code_lo_hi = cat(lw, lh) @[Cat.scala 30:58]
    node lu_code_lo = cat(lu_code_lo_hi, lb) @[Cat.scala 30:58]
    node lu_code_hi_lo = cat(lbu, ld) @[Cat.scala 30:58]
    node lu_code_hi_hi = cat(lwu, lhu) @[Cat.scala 30:58]
    node lu_code_hi = cat(lu_code_hi_hi, lu_code_hi_lo) @[Cat.scala 30:58]
    node lu_code = cat(lu_code_hi, lu_code_lo) @[Cat.scala 30:58]
    node lu_en = neq(lu_code, UInt<1>("h00")) @[Decode.scala 122:27]
    node su_code_lo = cat(sh, sb) @[Cat.scala 30:58]
    node su_code_hi = cat(sd, sw) @[Cat.scala 30:58]
    node su_code = cat(su_code_hi, su_code_lo) @[Cat.scala 30:58]
    node su_en = neq(su_code, UInt<1>("h00")) @[Decode.scala 125:27]
    node fu_code_lo = cat(bu_en, alu_en) @[Cat.scala 30:58]
    node fu_code_hi = cat(su_en, lu_en) @[Cat.scala 30:58]
    node fu_code = cat(fu_code_hi, fu_code_lo) @[Cat.scala 30:58]
    node _type_r_T = or(sll, srl) @[Decode.scala 130:26]
    node _type_r_T_1 = or(_type_r_T, sra) @[Decode.scala 130:35]
    node _type_r_T_2 = or(_type_r_T_1, sllw) @[Decode.scala 130:43]
    node _type_r_T_3 = or(_type_r_T_2, srlw) @[Decode.scala 130:52]
    node _type_r_T_4 = or(_type_r_T_3, sraw) @[Decode.scala 130:61]
    node _type_r_T_5 = or(_type_r_T_4, add) @[Decode.scala 130:70]
    node _type_r_T_6 = or(_type_r_T_5, addw) @[Decode.scala 131:26]
    node _type_r_T_7 = or(_type_r_T_6, alu_sub) @[Decode.scala 131:35]
    node _type_r_T_8 = or(_type_r_T_7, alu_subw) @[Decode.scala 131:43]
    node _type_r_T_9 = or(_type_r_T_8, xor) @[Decode.scala 131:52]
    node _type_r_T_10 = or(_type_r_T_9, or) @[Decode.scala 132:26]
    node _type_r_T_11 = or(_type_r_T_10, and) @[Decode.scala 132:35]
    node _type_r_T_12 = or(_type_r_T_11, slt) @[Decode.scala 132:43]
    node _type_r_T_13 = or(_type_r_T_12, sltu) @[Decode.scala 133:26]
    node type_r = or(_type_r_T_13, jalr) @[Decode.scala 133:35]
    node _type_i_T = or(slli, srli) @[Decode.scala 135:26]
    node _type_i_T_1 = or(_type_i_T, srai) @[Decode.scala 135:35]
    node _type_i_T_2 = or(_type_i_T_1, slliw) @[Decode.scala 135:43]
    node _type_i_T_3 = or(_type_i_T_2, srliw) @[Decode.scala 135:52]
    node _type_i_T_4 = or(_type_i_T_3, sraiw) @[Decode.scala 135:61]
    node _type_i_T_5 = or(_type_i_T_4, addi) @[Decode.scala 135:70]
    node _type_i_T_6 = or(_type_i_T_5, addiw) @[Decode.scala 136:26]
    node _type_i_T_7 = or(_type_i_T_6, xori) @[Decode.scala 136:35]
    node _type_i_T_8 = or(_type_i_T_7, ori) @[Decode.scala 137:26]
    node _type_i_T_9 = or(_type_i_T_8, andi) @[Decode.scala 137:35]
    node _type_i_T_10 = or(_type_i_T_9, slti) @[Decode.scala 137:43]
    node _type_i_T_11 = or(_type_i_T_10, sltiu) @[Decode.scala 138:26]
    node _type_i_T_12 = or(_type_i_T_11, lb) @[Decode.scala 138:35]
    node _type_i_T_13 = or(_type_i_T_12, lh) @[Decode.scala 139:26]
    node _type_i_T_14 = or(_type_i_T_13, lw) @[Decode.scala 139:35]
    node _type_i_T_15 = or(_type_i_T_14, ld) @[Decode.scala 139:43]
    node _type_i_T_16 = or(_type_i_T_15, lbu) @[Decode.scala 139:52]
    node _type_i_T_17 = or(_type_i_T_16, lhu) @[Decode.scala 139:61]
    node type_i = or(_type_i_T_17, lwu) @[Decode.scala 139:70]
    node _type_s_T = or(sb, sh) @[Decode.scala 140:26]
    node _type_s_T_1 = or(_type_s_T, sw) @[Decode.scala 140:35]
    node type_s = or(_type_s_T_1, sd) @[Decode.scala 140:43]
    node _type_b_T = or(beq, bne) @[Decode.scala 141:26]
    node _type_b_T_1 = or(_type_b_T, blt) @[Decode.scala 141:35]
    node _type_b_T_2 = or(_type_b_T_1, bge) @[Decode.scala 141:43]
    node _type_b_T_3 = or(_type_b_T_2, bltu) @[Decode.scala 141:52]
    node type_b = or(_type_b_T_3, bgeu) @[Decode.scala 141:61]
    node type_u = or(lui, alu_auipc) @[Decode.scala 142:26]
    node inst_type_lo_hi = cat(type_b, type_u) @[Cat.scala 30:58]
    node inst_type_lo = cat(inst_type_lo_hi, jal) @[Cat.scala 30:58]
    node inst_type_hi_hi = cat(type_r, type_i) @[Cat.scala 30:58]
    node inst_type_hi = cat(inst_type_hi_hi, type_s) @[Cat.scala 30:58]
    node inst_type = cat(inst_type_hi, inst_type_lo) @[Cat.scala 30:58]
    node _imm_i_T = bits(io.inst, 31, 31) @[Decode.scala 148:34]
    node _imm_i_T_1 = bits(_imm_i_T, 0, 0) @[Bitwise.scala 72:15]
    node imm_i_hi = mux(_imm_i_T_1, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
    node imm_i_lo = bits(io.inst, 31, 20) @[Decode.scala 148:45]
    node imm_i = cat(imm_i_hi, imm_i_lo) @[Cat.scala 30:58]
    node _imm_s_T = bits(io.inst, 31, 31) @[Decode.scala 149:34]
    node _imm_s_T_1 = bits(_imm_s_T, 0, 0) @[Bitwise.scala 72:15]
    node imm_s_hi_hi = mux(_imm_s_T_1, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
    node imm_s_hi_lo = bits(io.inst, 31, 25) @[Decode.scala 149:45]
    node imm_s_lo = bits(io.inst, 11, 7) @[Decode.scala 149:59]
    node imm_s_hi = cat(imm_s_hi_hi, imm_s_hi_lo) @[Cat.scala 30:58]
    node imm_s = cat(imm_s_hi, imm_s_lo) @[Cat.scala 30:58]
    node _imm_b_T = bits(io.inst, 31, 31) @[Decode.scala 150:34]
    node _imm_b_T_1 = bits(_imm_b_T, 0, 0) @[Bitwise.scala 72:15]
    node imm_b_hi_hi_hi = mux(_imm_b_T_1, UInt<43>("h07ffffffffff"), UInt<43>("h00")) @[Bitwise.scala 72:12]
    node imm_b_hi_hi_lo = bits(io.inst, 31, 31) @[Decode.scala 150:45]
    node imm_b_hi_lo = bits(io.inst, 7, 7) @[Decode.scala 150:55]
    node imm_b_lo_hi_hi = bits(io.inst, 30, 25) @[Decode.scala 150:64]
    node imm_b_lo_hi_lo = bits(io.inst, 11, 8) @[Decode.scala 150:78]
    node imm_b_lo_hi = cat(imm_b_lo_hi_hi, imm_b_lo_hi_lo) @[Cat.scala 30:58]
    node imm_b_lo = cat(imm_b_lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
    node imm_b_hi_hi = cat(imm_b_hi_hi_hi, imm_b_hi_hi_lo) @[Cat.scala 30:58]
    node imm_b_hi = cat(imm_b_hi_hi, imm_b_hi_lo) @[Cat.scala 30:58]
    node imm_b = cat(imm_b_hi, imm_b_lo) @[Cat.scala 30:58]
    node _imm_u_T = bits(io.inst, 31, 31) @[Decode.scala 151:34]
    node _imm_u_T_1 = bits(_imm_u_T, 0, 0) @[Bitwise.scala 72:15]
    node imm_u_hi_hi = mux(_imm_u_T_1, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node imm_u_hi_lo = bits(io.inst, 31, 12) @[Decode.scala 151:45]
    node imm_u_lo = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
    node imm_u_hi = cat(imm_u_hi_hi, imm_u_hi_lo) @[Cat.scala 30:58]
    node imm_u = cat(imm_u_hi, imm_u_lo) @[Cat.scala 30:58]
    node _imm_j_T = bits(io.inst, 31, 31) @[Decode.scala 152:34]
    node _imm_j_T_1 = bits(_imm_j_T, 0, 0) @[Bitwise.scala 72:15]
    node imm_j_hi_hi_hi = mux(_imm_j_T_1, UInt<43>("h07ffffffffff"), UInt<43>("h00")) @[Bitwise.scala 72:12]
    node imm_j_hi_hi_lo = bits(io.inst, 31, 31) @[Decode.scala 152:45]
    node imm_j_hi_lo = bits(io.inst, 19, 12) @[Decode.scala 152:55]
    node imm_j_lo_hi_hi = bits(io.inst, 20, 20) @[Decode.scala 152:69]
    node imm_j_lo_hi_lo = bits(io.inst, 30, 21) @[Decode.scala 152:79]
    node imm_j_lo_hi = cat(imm_j_lo_hi_hi, imm_j_lo_hi_lo) @[Cat.scala 30:58]
    node imm_j_lo = cat(imm_j_lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
    node imm_j_hi_hi = cat(imm_j_hi_hi_hi, imm_j_hi_hi_lo) @[Cat.scala 30:58]
    node imm_j_hi = cat(imm_j_hi_hi, imm_j_hi_lo) @[Cat.scala 30:58]
    node imm_j = cat(imm_j_hi, imm_j_lo) @[Cat.scala 30:58]
    node _imm_T = eq(UInt<6>("h020"), inst_type) @[Mux.scala 80:60]
    node _imm_T_1 = mux(_imm_T, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 80:57]
    node _imm_T_2 = eq(UInt<5>("h010"), inst_type) @[Mux.scala 80:60]
    node _imm_T_3 = mux(_imm_T_2, imm_i, _imm_T_1) @[Mux.scala 80:57]
    node _imm_T_4 = eq(UInt<4>("h08"), inst_type) @[Mux.scala 80:60]
    node _imm_T_5 = mux(_imm_T_4, imm_s, _imm_T_3) @[Mux.scala 80:57]
    node _imm_T_6 = eq(UInt<3>("h04"), inst_type) @[Mux.scala 80:60]
    node _imm_T_7 = mux(_imm_T_6, imm_b, _imm_T_5) @[Mux.scala 80:57]
    node _imm_T_8 = eq(UInt<2>("h02"), inst_type) @[Mux.scala 80:60]
    node _imm_T_9 = mux(_imm_T_8, imm_u, _imm_T_7) @[Mux.scala 80:57]
    node _imm_T_10 = eq(UInt<1>("h01"), inst_type) @[Mux.scala 80:60]
    node imm = mux(_imm_T_10, imm_j, _imm_T_9) @[Mux.scala 80:57]
    io.decode_info.fu_code <= fu_code @[Decode.scala 163:29]
    io.decode_info.alu_code <= alu_code @[Decode.scala 164:29]
    io.decode_info.bu_code <= bu_code @[Decode.scala 165:29]
    io.decode_info.lu_code <= lu_code @[Decode.scala 166:29]
    io.decode_info.su_code <= su_code @[Decode.scala 167:29]
    node _io_rs1_addr_T = bits(io.inst, 19, 15) @[Decode.scala 169:24]
    io.rs1_addr <= _io_rs1_addr_T @[Decode.scala 169:17]
    node _io_rs2_addr_T = bits(io.inst, 24, 20) @[Decode.scala 170:24]
    io.rs2_addr <= _io_rs2_addr_T @[Decode.scala 170:17]
    node _io_rd_addr_T = bits(io.inst, 11, 7) @[Decode.scala 171:24]
    io.rd_addr <= _io_rd_addr_T @[Decode.scala 171:17]
    node _io_rs1_en_T = or(type_r, type_i) @[Decode.scala 173:25]
    node _io_rs1_en_T_1 = or(_io_rs1_en_T, type_s) @[Decode.scala 173:35]
    node _io_rs1_en_T_2 = or(_io_rs1_en_T_1, type_b) @[Decode.scala 173:45]
    io.rs1_en <= _io_rs1_en_T_2 @[Decode.scala 173:15]
    node _io_rs2_en_T = or(type_r, type_s) @[Decode.scala 174:25]
    node _io_rs2_en_T_1 = or(_io_rs2_en_T, type_b) @[Decode.scala 174:35]
    io.rs2_en <= _io_rs2_en_T_1 @[Decode.scala 174:15]
    node _io_rd_en_T = or(type_r, type_i) @[Decode.scala 175:25]
    node _io_rd_en_T_1 = or(_io_rd_en_T, type_u) @[Decode.scala 175:35]
    node _io_rd_en_T_2 = or(_io_rd_en_T_1, jal) @[Decode.scala 175:45]
    io.rd_en <= _io_rd_en_T_2 @[Decode.scala 175:15]
    node _io_op1_T = mux(io.rs1_en, io.rs1_data, UInt<1>("h00")) @[Decode.scala 177:18]
    io.op1 <= _io_op1_T @[Decode.scala 177:12]
    node _io_op2_T = mux(io.rs2_en, io.rs2_data, imm) @[Decode.scala 178:18]
    io.op2 <= _io_op2_T @[Decode.scala 178:12]
    io.imm <= imm @[Decode.scala 179:12]
    
  module Execution : 
    input clock : Clock
    input reset : Reset
    output io : {flip decode_info : {fu_code : UInt, alu_code : UInt, bu_code : UInt, lu_code : UInt, su_code : UInt}, flip op1 : UInt<64>, flip op2 : UInt<64>, flip pc : UInt<64>, flip imm : UInt<64>, out : UInt<64>, jump_en : UInt<1>, jump_pc : UInt<64>}
    
    node _alu_out_T = add(io.op1, io.op2) @[Execution.scala 29:39]
    node _alu_out_T_1 = tail(_alu_out_T, 1) @[Execution.scala 29:39]
    node _alu_out_T_2 = add(io.op1, io.op2) @[Execution.scala 30:39]
    node _alu_out_T_3 = tail(_alu_out_T_2, 1) @[Execution.scala 30:39]
    node _alu_out_T_4 = bits(_alu_out_T_3, 31, 0) @[Execution.scala 30:45]
    node _alu_out_T_5 = sub(io.op1, io.op2) @[Execution.scala 31:39]
    node _alu_out_T_6 = tail(_alu_out_T_5, 1) @[Execution.scala 31:39]
    node _alu_out_T_7 = sub(io.op1, io.op2) @[Execution.scala 32:39]
    node _alu_out_T_8 = tail(_alu_out_T_7, 1) @[Execution.scala 32:39]
    node _alu_out_T_9 = bits(_alu_out_T_8, 31, 0) @[Execution.scala 32:45]
    node _alu_out_T_10 = add(io.op2, io.pc) @[Execution.scala 33:39]
    node _alu_out_T_11 = tail(_alu_out_T_10, 1) @[Execution.scala 33:39]
    node _alu_out_T_12 = bits(io.op2, 5, 0) @[Execution.scala 34:45]
    node _alu_out_T_13 = dshl(io.op1, _alu_out_T_12) @[Execution.scala 34:39]
    node _alu_out_T_14 = bits(io.op2, 5, 0) @[Execution.scala 35:45]
    node _alu_out_T_15 = dshr(io.op1, _alu_out_T_14) @[Execution.scala 35:39]
    node _alu_out_T_16 = asSInt(io.op1) @[Execution.scala 36:45]
    node _alu_out_T_17 = bits(io.op2, 5, 0) @[Execution.scala 36:54]
    node _alu_out_T_18 = dshr(_alu_out_T_16, _alu_out_T_17) @[Execution.scala 36:48]
    node _alu_out_T_19 = asUInt(_alu_out_T_18) @[Execution.scala 36:68]
    node _alu_out_T_20 = bits(io.op1, 31, 0) @[Execution.scala 37:38]
    node _alu_out_T_21 = bits(io.op2, 4, 0) @[Execution.scala 37:52]
    node _alu_out_T_22 = dshl(_alu_out_T_20, _alu_out_T_21) @[Execution.scala 37:46]
    node _alu_out_T_23 = bits(io.op1, 31, 0) @[Execution.scala 38:38]
    node _alu_out_T_24 = bits(io.op2, 4, 0) @[Execution.scala 38:52]
    node _alu_out_T_25 = dshr(_alu_out_T_23, _alu_out_T_24) @[Execution.scala 38:46]
    node _alu_out_T_26 = asSInt(io.op1) @[Execution.scala 39:45]
    node _alu_out_T_27 = bits(_alu_out_T_26, 31, 0) @[Execution.scala 39:47]
    node _alu_out_T_28 = bits(io.op2, 4, 0) @[Execution.scala 39:61]
    node _alu_out_T_29 = dshr(_alu_out_T_27, _alu_out_T_28) @[Execution.scala 39:55]
    node _alu_out_T_30 = xor(io.op1, io.op2) @[Execution.scala 40:39]
    node _alu_out_T_31 = or(io.op1, io.op2) @[Execution.scala 41:39]
    node _alu_out_T_32 = and(io.op1, io.op2) @[Execution.scala 42:39]
    node _alu_out_T_33 = asSInt(io.op1) @[Execution.scala 43:45]
    node _alu_out_T_34 = asSInt(io.op2) @[Execution.scala 43:60]
    node _alu_out_T_35 = lt(_alu_out_T_33, _alu_out_T_34) @[Execution.scala 43:48]
    node _alu_out_T_36 = lt(io.op1, io.op2) @[Execution.scala 44:39]
    node _alu_out_T_37 = eq(UInt<1>("h01"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_38 = mux(_alu_out_T_37, _alu_out_T_1, UInt<1>("h00")) @[Mux.scala 80:57]
    node _alu_out_T_39 = eq(UInt<2>("h02"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_40 = mux(_alu_out_T_39, _alu_out_T_4, _alu_out_T_38) @[Mux.scala 80:57]
    node _alu_out_T_41 = eq(UInt<3>("h04"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_42 = mux(_alu_out_T_41, _alu_out_T_6, _alu_out_T_40) @[Mux.scala 80:57]
    node _alu_out_T_43 = eq(UInt<4>("h08"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_44 = mux(_alu_out_T_43, _alu_out_T_9, _alu_out_T_42) @[Mux.scala 80:57]
    node _alu_out_T_45 = eq(UInt<5>("h010"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_46 = mux(_alu_out_T_45, _alu_out_T_11, _alu_out_T_44) @[Mux.scala 80:57]
    node _alu_out_T_47 = eq(UInt<6>("h020"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_48 = mux(_alu_out_T_47, _alu_out_T_13, _alu_out_T_46) @[Mux.scala 80:57]
    node _alu_out_T_49 = eq(UInt<7>("h040"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_50 = mux(_alu_out_T_49, _alu_out_T_15, _alu_out_T_48) @[Mux.scala 80:57]
    node _alu_out_T_51 = eq(UInt<8>("h080"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_52 = mux(_alu_out_T_51, _alu_out_T_19, _alu_out_T_50) @[Mux.scala 80:57]
    node _alu_out_T_53 = eq(UInt<9>("h0100"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_54 = mux(_alu_out_T_53, _alu_out_T_22, _alu_out_T_52) @[Mux.scala 80:57]
    node _alu_out_T_55 = eq(UInt<10>("h0200"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_56 = mux(_alu_out_T_55, _alu_out_T_25, _alu_out_T_54) @[Mux.scala 80:57]
    node _alu_out_T_57 = eq(UInt<11>("h0400"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_58 = mux(_alu_out_T_57, _alu_out_T_29, _alu_out_T_56) @[Mux.scala 80:57]
    node _alu_out_T_59 = eq(UInt<12>("h0800"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_60 = mux(_alu_out_T_59, _alu_out_T_30, _alu_out_T_58) @[Mux.scala 80:57]
    node _alu_out_T_61 = eq(UInt<13>("h01000"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_62 = mux(_alu_out_T_61, _alu_out_T_31, _alu_out_T_60) @[Mux.scala 80:57]
    node _alu_out_T_63 = eq(UInt<14>("h02000"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_64 = mux(_alu_out_T_63, _alu_out_T_32, _alu_out_T_62) @[Mux.scala 80:57]
    node _alu_out_T_65 = eq(UInt<15>("h04000"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node _alu_out_T_66 = mux(_alu_out_T_65, _alu_out_T_35, _alu_out_T_64) @[Mux.scala 80:57]
    node _alu_out_T_67 = eq(UInt<16>("h08000"), io.decode_info.alu_code) @[Mux.scala 80:60]
    node alu_out = mux(_alu_out_T_67, _alu_out_T_36, _alu_out_T_66) @[Mux.scala 80:57]
    node _bu_out_T = eq(io.decode_info.bu_code, UInt<8>("h080")) @[Execution.scala 47:30]
    node _bu_out_T_1 = eq(io.decode_info.bu_code, UInt<7>("h040")) @[Execution.scala 47:59]
    node _bu_out_T_2 = or(_bu_out_T, _bu_out_T_1) @[Execution.scala 47:48]
    node _bu_out_T_3 = add(io.pc, UInt<3>("h04")) @[Execution.scala 47:81]
    node _bu_out_T_4 = tail(_bu_out_T_3, 1) @[Execution.scala 47:81]
    node bu_out = mux(_bu_out_T_2, _bu_out_T_4, UInt<1>("h00")) @[Execution.scala 47:21]
    node _bu_jump_pc_T = eq(io.decode_info.bu_code, UInt<8>("h080")) @[Execution.scala 48:34]
    node _bu_jump_pc_T_1 = add(io.op1, io.op2) @[Execution.scala 48:59]
    node _bu_jump_pc_T_2 = tail(_bu_jump_pc_T_1, 1) @[Execution.scala 48:59]
    node _bu_jump_pc_T_3 = and(_bu_jump_pc_T_2, UInt<64>("h0fffffffffffffffe")) @[Execution.scala 48:66]
    node _bu_jump_pc_T_4 = add(io.pc, io.imm) @[Execution.scala 48:95]
    node _bu_jump_pc_T_5 = tail(_bu_jump_pc_T_4, 1) @[Execution.scala 48:95]
    node bu_jump_pc = mux(_bu_jump_pc_T, _bu_jump_pc_T_3, _bu_jump_pc_T_5) @[Execution.scala 48:25]
    node _bu_jump_en_T = eq(io.op1, io.op2) @[Execution.scala 50:31]
    node _bu_jump_en_T_1 = neq(io.op1, io.op2) @[Execution.scala 51:31]
    node _bu_jump_en_T_2 = asSInt(io.op1) @[Execution.scala 52:37]
    node _bu_jump_en_T_3 = asSInt(io.op2) @[Execution.scala 52:54]
    node _bu_jump_en_T_4 = lt(_bu_jump_en_T_2, _bu_jump_en_T_3) @[Execution.scala 52:41]
    node _bu_jump_en_T_5 = asSInt(io.op1) @[Execution.scala 53:37]
    node _bu_jump_en_T_6 = asSInt(io.op2) @[Execution.scala 53:54]
    node _bu_jump_en_T_7 = geq(_bu_jump_en_T_5, _bu_jump_en_T_6) @[Execution.scala 53:41]
    node _bu_jump_en_T_8 = lt(io.op1, io.op2) @[Execution.scala 54:32]
    node _bu_jump_en_T_9 = geq(io.op1, io.op2) @[Execution.scala 55:32]
    node _bu_jump_en_T_10 = eq(UInt<1>("h01"), io.decode_info.bu_code) @[Mux.scala 80:60]
    node _bu_jump_en_T_11 = mux(_bu_jump_en_T_10, _bu_jump_en_T, UInt<1>("h00")) @[Mux.scala 80:57]
    node _bu_jump_en_T_12 = eq(UInt<2>("h02"), io.decode_info.bu_code) @[Mux.scala 80:60]
    node _bu_jump_en_T_13 = mux(_bu_jump_en_T_12, _bu_jump_en_T_1, _bu_jump_en_T_11) @[Mux.scala 80:57]
    node _bu_jump_en_T_14 = eq(UInt<3>("h04"), io.decode_info.bu_code) @[Mux.scala 80:60]
    node _bu_jump_en_T_15 = mux(_bu_jump_en_T_14, _bu_jump_en_T_4, _bu_jump_en_T_13) @[Mux.scala 80:57]
    node _bu_jump_en_T_16 = eq(UInt<4>("h08"), io.decode_info.bu_code) @[Mux.scala 80:60]
    node _bu_jump_en_T_17 = mux(_bu_jump_en_T_16, _bu_jump_en_T_7, _bu_jump_en_T_15) @[Mux.scala 80:57]
    node _bu_jump_en_T_18 = eq(UInt<5>("h010"), io.decode_info.bu_code) @[Mux.scala 80:60]
    node _bu_jump_en_T_19 = mux(_bu_jump_en_T_18, _bu_jump_en_T_8, _bu_jump_en_T_17) @[Mux.scala 80:57]
    node _bu_jump_en_T_20 = eq(UInt<6>("h020"), io.decode_info.bu_code) @[Mux.scala 80:60]
    node _bu_jump_en_T_21 = mux(_bu_jump_en_T_20, _bu_jump_en_T_9, _bu_jump_en_T_19) @[Mux.scala 80:57]
    node _bu_jump_en_T_22 = eq(UInt<7>("h040"), io.decode_info.bu_code) @[Mux.scala 80:60]
    node _bu_jump_en_T_23 = mux(_bu_jump_en_T_22, UInt<1>("h01"), _bu_jump_en_T_21) @[Mux.scala 80:57]
    node _bu_jump_en_T_24 = eq(UInt<8>("h080"), io.decode_info.bu_code) @[Mux.scala 80:60]
    node bu_jump_en = mux(_bu_jump_en_T_24, UInt<1>("h01"), _bu_jump_en_T_23) @[Mux.scala 80:57]
    node _io_out_T = eq(UInt<1>("h01"), io.decode_info.fu_code) @[Mux.scala 80:60]
    node _io_out_T_1 = mux(_io_out_T, alu_out, UInt<1>("h00")) @[Mux.scala 80:57]
    node _io_out_T_2 = eq(UInt<2>("h02"), io.decode_info.fu_code) @[Mux.scala 80:60]
    node _io_out_T_3 = mux(_io_out_T_2, bu_out, _io_out_T_1) @[Mux.scala 80:57]
    io.out <= _io_out_T_3 @[Execution.scala 64:12]
    io.jump_en <= bu_jump_en @[Execution.scala 68:16]
    io.jump_pc <= bu_jump_pc @[Execution.scala 69:16]
    
  extmodule RegFile : 
    input clk : Clock
    input reset : Reset
    input rs1_en : UInt<1>
    input rs2_en : UInt<1>
    input rd_en : UInt<1>
    input rs1_addr : UInt<5>
    input rs2_addr : UInt<5>
    input rd_addr : UInt<5>
    output rs1_data : UInt<64>
    output rs2_data : UInt<64>
    input rd_data : UInt<64>
    
    defname = RegFile
    
    
  extmodule Halt : 
    input clk : Clock
    input reset : Reset
    input halt : UInt<1>
    
    defname = Halt
    
    
  module Core : 
    input clock : Clock
    input reset : Reset
    output io : {imem : {en : UInt<1>, addr : UInt<64>, flip data : UInt<32>}}
    
    inst ifu of IFetch @[Core.scala 11:19]
    ifu.clock <= clock
    ifu.reset <= reset
    inst idu of Decode @[Core.scala 12:19]
    idu.clock <= clock
    idu.reset <= reset
    inst ieu of Execution @[Core.scala 13:19]
    ieu.clock <= clock
    ieu.reset <= reset
    inst rfu of RegFile @[Core.scala 14:19]
    rfu.rd_data is invalid
    rfu.rs2_data is invalid
    rfu.rs1_data is invalid
    rfu.rd_addr is invalid
    rfu.rs2_addr is invalid
    rfu.rs1_addr is invalid
    rfu.rd_en is invalid
    rfu.rs2_en is invalid
    rfu.rs1_en is invalid
    rfu.reset is invalid
    rfu.clk is invalid
    rfu.clk <= clock @[Core.scala 16:17]
    rfu.reset <= reset @[Core.scala 17:17]
    ifu.io.imem.data <= io.imem.data @[Core.scala 20:15]
    io.imem.addr <= ifu.io.imem.addr @[Core.scala 20:15]
    io.imem.en <= ifu.io.imem.en @[Core.scala 20:15]
    ifu.io.jump_en <= ieu.io.jump_en @[Core.scala 21:18]
    ifu.io.jump_pc <= ieu.io.jump_pc @[Core.scala 22:18]
    idu.io.pc <= ifu.io.pc @[Core.scala 24:19]
    idu.io.inst <= ifu.io.inst @[Core.scala 25:19]
    ieu.io.decode_info.su_code <= idu.io.decode_info.su_code @[Core.scala 26:22]
    ieu.io.decode_info.lu_code <= idu.io.decode_info.lu_code @[Core.scala 26:22]
    ieu.io.decode_info.bu_code <= idu.io.decode_info.bu_code @[Core.scala 26:22]
    ieu.io.decode_info.alu_code <= idu.io.decode_info.alu_code @[Core.scala 26:22]
    ieu.io.decode_info.fu_code <= idu.io.decode_info.fu_code @[Core.scala 26:22]
    idu.io.rs1_data <= rfu.rs1_data @[Core.scala 27:19]
    idu.io.rs2_data <= rfu.rs2_data @[Core.scala 28:19]
    ieu.io.op1 <= idu.io.op1 @[Core.scala 30:14]
    ieu.io.op2 <= idu.io.op2 @[Core.scala 31:14]
    ieu.io.pc <= ifu.io.pc @[Core.scala 32:14]
    ieu.io.imm <= idu.io.imm @[Core.scala 33:14]
    rfu.rs1_en <= idu.io.rs1_en @[Core.scala 35:19]
    rfu.rs2_en <= idu.io.rs2_en @[Core.scala 36:19]
    rfu.rd_en <= idu.io.rd_en @[Core.scala 37:19]
    rfu.rs1_addr <= idu.io.rs1_addr @[Core.scala 38:19]
    rfu.rs2_addr <= idu.io.rs2_addr @[Core.scala 39:19]
    rfu.rd_addr <= idu.io.rd_addr @[Core.scala 40:19]
    rfu.rd_data <= ieu.io.out @[Core.scala 41:19]
    node _T = asUInt(reset) @[Core.scala 44:9]
    node _T_1 = eq(_T, UInt<1>("h00")) @[Core.scala 44:9]
    when _T_1 : @[Core.scala 44:9]
      printf(clock, UInt<1>(1), "pc=%x inst=%x wen=%d waddr=%d wdata=%x\n", ifu.io.pc, ifu.io.inst, idu.io.rd_en, idu.io.rd_addr, ieu.io.out) @[Core.scala 44:9]
      skip @[Core.scala 44:9]
    inst halt of Halt @[Core.scala 46:20]
    halt.halt is invalid
    halt.reset is invalid
    halt.clk is invalid
    halt.clk <= clock @[Core.scala 47:17]
    halt.reset <= reset @[Core.scala 48:17]
    node _halt_io_halt_T = eq(ifu.io.inst, UInt<21>("h0100073")) @[Core.scala 49:32]
    node _halt_io_halt_T_1 = eq(ifu.io.inst, UInt<7>("h06b")) @[Core.scala 49:58]
    node _halt_io_halt_T_2 = or(_halt_io_halt_T, _halt_io_halt_T_1) @[Core.scala 49:43]
    halt.halt <= _halt_io_halt_T_2 @[Core.scala 49:17]
    
  module SimTop : 
    input clock : Clock
    input reset : UInt<1>
    output io : {imem : {en : UInt<1>, addr : UInt<64>, flip data : UInt<32>}}
    
    inst core of Core @[SimTop.scala 27:20]
    core.clock <= clock
    core.reset <= reset
    core.io.imem.data <= io.imem.data @[SimTop.scala 28:11]
    io.imem.addr <= core.io.imem.addr @[SimTop.scala 28:11]
    io.imem.en <= core.io.imem.en @[SimTop.scala 28:11]
    
